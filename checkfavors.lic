=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#checkfavors
=end

custom_require.call(%w[common common-arcana common-travel drinfomon events])

class CheckFavors
  include DRC
  include DRCA
  include DRCT

  def initialize
    @settings = get_settings
    town_data = get_data('town')
    @hometown = town_data[@settings.hometown]
    check_favors
  end

  def check_favors
    if @settings.favor_god['Triquetra']
      check_symbols
    end
    return unless @settings.favor_goal
    /(\d+)/ =~ bput('favor', 'You currently have \d+', 'You are not currently')
    favor_count = Regexp.last_match(1).to_i
    return if favor_count >= @settings.favor_goal

    if /could not/ =~ bput("tap my #{@settings.favor_god} orb", 'The orb is delicate', 'I could not find')
      run_favors
      fput('stow my orb')
    elsif rub_orb?
      walk_to(@hometown['favor_altar']['id'])
      fput("get my #{@settings.favor_god} orb")
      fput('put my orb on altar')
      if favor_count + 1 < @settings.favor_goal
        run_favors
        fput('stow my orb')
      end
    end
  end

  def run_favors
    if @settings.use_favor_altars
      wait_for_script_to_complete('favor', [@settings.favor_god])
    else
      wait_for_script_to_complete('favor')
    end
  end

  def rub_orb?
    case bput("rub my #{@settings.favor_god} orb", 'not yet fully prepared', 'lacking in the type of sacrifice the orb requires', 'your sacrifice is properly prepared')
    when 'not yet fully prepared'
      false
    when 'lacking in the type of sacrifice the orb requires'
      false
    when 'your sacrifice is properly prepared'
      true
    end
    fput("stow my orb")
    exit
  end

  def check_symbols
    return unless @settings.favor_goal
    /(\d+)/ =~ bput('favor', 'You currently have \d+', 'You are not currently')
    favor_count = Regexp.last_match(1).to_i
    return if favor_count >= @settings.favor_goal

    case bput('tap my symbol', 'You tap', 'I could not find')
    when /I could not find/
      run_prydaenfavors
    when /You tap/
      invoke_symbol?
    end
  end

  def run_prydaenfavors
    wait_for_script_to_complete('prydaen-favors')
  end
  
  def invoke_symbol?
    fput('get my symbol')
    case bput('invoke my symbol', 'You attempt to invoke', 'experience is curiously painless', 'With a flash')
    when 'You attempt to invoke'
      fput('stow symbol')
      false
    when 'experience is curiously painless'
      fput('stow symbol')
      false
    when 'With a flash'
      true
    end
    exit
  end
end

CheckFavors.new
